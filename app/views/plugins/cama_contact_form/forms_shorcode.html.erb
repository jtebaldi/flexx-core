<%
   @form =  attributes['slug'] == '__first__' ? current_site.contact_forms.first : current_site.contact_forms.where({slug: attributes['slug']}).first
   if @form.present?
     values_fields =  (flash[:values].present?)? flash[:values].to_sym : {}
     values = JSON.parse(@form.value).to_sym
     r = {form: @form, form_class: "railscf-form railscf-form-group", before_form: @form.the_settings[:railscf_mail][:previous_html].to_s, after_form: @form.the_settings[:railscf_mail][:after_html].to_s, submit: "<div class='form-group'><button class='submit_btn btn btn-default pull-right' type='submit'>[submit_label]</button></div>"}
     hooks_run("contact_form_render", r)
%>
    <section>
        <%= raw r[:before_form] %>
        <%= form_for @form, url: plugins_cama_contact_form_save_form_path, html: {method: "post", class: r[:form_class], multipart: true} do |f| %>
            <%= hidden_field_tag "id", @form.id %>
            <%= render :partial => "camaleon_cms/flash_messages", locals:{ flash: (flash[:contact_form] || {}).with_indifferent_access } %>
            <%= raw cama_form_element_bootstrap_object(r[:form], values[:fields], values_fields) %>
            <% if values[:fields].present? && !values[:fields].delete_if{|field| field[:field_type] != 'submit' }.present? %>
                <%= raw  r[:submit].sub('[submit_label]', @form.the_settings[:railscf_form_button][:name_button])%>
            <% end %>
            <%= raw front_editor_link(edit_admin_plugins_cama_contact_form_admin_form_url(@form.id)) rescue "" %>
        <% end %>
        <%= raw r[:after_form] %>
    </section>
<% end %>